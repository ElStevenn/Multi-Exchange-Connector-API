
services:
  api:
    build: .
    container_name: multiexchange_apiv2
    restart: unless-stopped
    ports:
      - "8000:8001"
    environment:
      - ENV=production
    networks:
      - multiexchange_network

  celery:
    build: .
    container_name: multiexchange_celery
    restart: unless-stopped
    command: >
      celery -A src.app.celery_app.celery_config worker
      --pool=solo
      --concurrency=1
      --loglevel=info
      --queues=once_off_queue
    environment:
      - ENV=production
    depends_on:
      - redis
    networks:
      - multiexchange_network

  celery-beat:
    build: .
    container_name: multiexchange_celery_beat
    restart: unless-stopped
    command: >
      celery -A src.app.celery_app.celery_config beat
      --loglevel=info
    environment:
      - ENV=production
    depends_on:
      - redis
      - celery
    networks:
      - multiexchange_network

  redis:
    image: redis:latest
    container_name: multiexchange_redis_v1
    restart: unless-stopped
    networks:
      - multiexchange_network
    volumes:
      - multiexchange_volume:/data
    ports:
      - "6379:6379"
    command:
      - redis-server
      - --appendonly
      - "yes"
      - --dir
      - /data
      - --bind
      - 0.0.0.0

networks:
  multiexchange_network:
    driver: bridge

volumes:
  multiexchange_volume:
